{"version":3,"sources":["app.module.js","config.js","config.route.js","main.js","cart.js","products.service.js","shopping-cart.service.js","shopping.js","viewed.service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/* \n * File       : app.js\n * Date       : 22 Aug 16\n * Author     : Jaymes Young\n * \n * Main AngularJS Web Application\n */\n'use strict';\n\nangular.module('g8tor', ['ngRoute']);\n","/* \n File     : config.js\n Date     : Sep 24, 2016\n Author   : Jaymes Young <jaymes@phoenixjaymes.com>\n */\n\n'use strict';\n\nangular.module('g8tor')\n    .run(function($rootScope, products) {\n      // Get products\n      products.getProducts(function(response) {\n        $rootScope.products = response.data;\n      });\n    });\n","/* \n File     : config.route.js\n Date     : Sep 24, 2016\n Author   : Jaymes Young <jaymes@phoenixjaymes.com>\n */\n\n'use strict';\n\nangular.module('g8tor')\n    .config(['$routeProvider', function($routeProvider) {\n        $routeProvider\n        .when('/', {templateUrl : 'app/views/home.html'})\n        .when('/shop', {templateUrl : 'app/views/shop.html', controller : 'Shopping'})\n        .when('/about', {templateUrl : 'app/views/about.html'})\n        .when('/contact', {templateUrl : 'app/views/contact.html'})\n        .when('/cart', {templateUrl : 'app/views/cart.html', controller : 'Cart'})\n        .otherwise({templateUrl: 'app/views/404.html'});\n    }]);","/* \n * Files      : main.js\n * Date       : 25 Aug 16\n * Author     : Jaymes Young\n */\n'use strict';\n\nangular.module('g8tor')\n    .controller('Main', function($scope, shoppingCart) {\n      $scope.cartCount = shoppingCart.getCartCount();\n      //$scope.cart = [];\n     \n      $scope.$on('cartCountChange', function(evt, cnt) {\n        $scope.cartCount = cnt;\n      });\n      \n      \n      // Add item to cart and update cart count\n      $scope.$on('updateCart', function(evt, args) {\n        // Add item to cart if it is not already in it\n        if (!$scope.inCart($scope.products[args.item].id)) {\n           $scope.cart.push({\"id\"  : $scope.products[args.item].id, \"qty\" : 1});\n        }\n      });\n});\n","/* \n * Files      : shop.js\n * Date       : 26 Aug 16\n * Author     : Jaymes Young\n */\n'use strict';\n\nangular.module('g8tor')\n    .controller('Cart', function($scope, shoppingCart, viewed) {\n      $scope.msgViewed = '';\n      $scope.viewedCount = viewed.getViewedCount();\n      $scope.cart = shoppingCart.getCart();\n      \n      // Message for cart heading\n      if (shoppingCart.getCartCount() === 0) {\n        $scope.msg = 'Your cart is currently empty';\n      } else {\n        $scope.msg = 'Here are the items in your cart ';\n      }\n      \n      // Message for viewed heading\n      if ($scope.viewedCount !== 0) {\n        $scope.msgViewed = 'Your recently viewed items';\n      }\n      \n      // Get recently view\n      $scope.viewed = viewed.getViewed();\n      \n      // Cart total\n      $scope.cartTotal = shoppingCart.getCartTotal();\n      \n      \n      // Item quantity change\n      $scope.qtyChange = function(index, qty) {\n        shoppingCart.quantityChange(index, qty);\n      };\n      \n      // Delete item from cart\n      $scope.deleteItem = function(id) {\n        shoppingCart.deleteItem(id);\n      };\n      \n      // Change cart total\n      $scope.$on('cartTotalChange', function(evt, args) {\n        $scope.cartTotal = args;\n      });\n      \n      $scope.$on('cartCountChange', function(evt, args) {\n        if(args === 0) {\n          $scope.msg = $scope.msg = 'Your cart is currently empty';\n        }\n      }); \n});","/* \n * File       : product-data.js\n * Date       : 22 Aug 16\n * Author     : Jaymes Young\n */\n\n'use strict';\n\nangular.module('g8tor')\n    .service('products', function($http) {\n  \n      // Get products\n      this.getProducts = function(callback) {\n        var fullDate = new Date();    // Prevent using cached information\n        $http.get('mock/products.json?date=' + fullDate)\n            .then(callback);\n      };\n});\n\n","/* \n * File       : shopping-cart.js\n * Date       : 22 Aug 16\n * Author     : Jaymes Young\n */\n\n'use strict';\n\nangular.module('g8tor')\n    .service('shoppingCart', ['$rootScope', function($rootScope, viewed) {\n      // Shopping Cart\n      var cart = [];\n      var cartQty = 0;\n      var cartTotal = 0;\n      \n      // Check to see if item is already in the cart\n      var inCart = function(index) {      \n        for(var i = 0; i < cart.length; i++) {\n          if (cart[i].id === index) {\n            return true;\n          }\n        }\n          return false;\n      };\n      \n      \n      // Add item to cart\n      this.addItem = function(index) {\n        \n        // Add item to cart if it is not already in it\n        if (!inCart(index)) {\n           cart.push({\"id\"  : index, \"qty\" : 1});\n           \n           // Remove item from recently viewed\n           \n           // Broadcast change in cart size\n           $rootScope.$broadcast('cartCountChange', this.getCartCount());\n        }\n      };\n\n      \n      // delete item from cart\n      this.deleteItem = function(id) {\n        cart.splice(id,1);\n        \n        // Broadcast change in cart size and change in cart total\n        this.broadcastUpdates();\n      };\n      \n      \n      // Change single item quantity\n      this.quantityChange = function(id, qty) {\n        cart[id].qty = parseInt(qty);\n        \n        // Broadcast change in cart size and change in cart total\n        this.broadcastUpdates();\n      };\n      \n      \n      // Get cart count\n      this.getCartCount = function() {\n        var count = 0;\n        for(var i = 0; i < cart.length; i++) {\n          count += cart[i].qty;\n        }\n        \n        // count = NaN make it 0\n        if (isNaN(count)) {\n          count = 0;\n        }\n        \n        cartQty = count;\n        return cartQty;\n      };\n      \n      \n      // Get cart\n      this.getCart = function() {\n        return cart;\n      };\n      \n    \n      // Cart total\n      this.getCartTotal = function() {\n        var total = 0;\n                \n        for (var i = 0; i < cart.length; i++) {\n          total += ($rootScope.products[cart[i].id].price * cart[i].qty);\n        }\n        \n        // totalotal = NaN make it 0\n        if (isNaN(total)) {\n          total = 0;\n        }\n        \n        cartTotal = total.toFixed(2);\n        return cartTotal;\n      };\n      \n      this.broadcastUpdates = function() {\n        $rootScope.$broadcast('cartCountChange', this.getCartCount());\n        $rootScope.$broadcast('cartTotalChange', this.getCartTotal());\n      };\n}]);\n\n\n","/* \n * Files      : shop.js\n * Date       : 25 Aug 16\n * Author     : Jaymes Young\n */\n'use strict';\n\nangular.module('g8tor')\n    .controller('Shopping', function($scope, shoppingCart, viewed) {\n      $scope.showProduct = false;\n\n      // Show item details\n      $scope.$on('showDetail', function(evt, args) {\n        $scope.showProduct = true;\n        $scope.productName = $scope.products[args.item].name;\n        $scope.productPrice = $scope.products[args.item].price;\n        $scope.productImg = $scope.products[args.item].image;\n      });\n      \n      // Hide item details\n      $scope.$on('hideDetail', function() {\n        $scope.showProduct = false;\n      });\n      \n      // Send to shopCtrl form ng-repeat scope\n      $scope.showItemDetail = function(index) {\n        $scope.$emit('showDetail', {item : index});\n      };\n      \n      // Send to shopCtrl form ng-repeat scope\n      $scope.hideItemDetail = function() {\n        $scope.$emit('hideDetail');\n      };\n\n      // Add item to cart\n      $scope.addItem = function(index) {\n        shoppingCart.addItem(index);\n      };\n      \n      // Add item to recentlyViewed\n      $scope.addViewed = function(index) {\n        viewed.addViewed(index);\n      };\n      \n      \n      $scope.logConsole = function(price) {\n        console.log('Price: ' + price);\n      };\n    });\n","/* \n * File       : recently-viewed.js\n * Date       : 22 Aug 16\n * Author     : Jaymes Young\n */\n\n'use strict';\n\nangular.module('g8tor')\n    .service('viewed', ['$rootScope', function($rootScope) {\n      // Viewed Items array\n      var viewed = [{\"id\" : 0}, {\"id\" : 1}, {\"id\" : 3}, {\"id\" : 4}, {\"id\" : 5}];\n      var viewed = [];\n      \n      // Check to see if item is already in viewed array\n      // Check that item is not in cart\n      var inCart = function(index) {      \n        for(var i = 0; i < viewed.length; i++) {\n          if (viewed[i].id === index) {\n            return true;\n          }\n        }\n          return false;\n      };\n      \n      // Add item to recently viewed array\n      this.addViewed = function(index) {\n        // Add item to cart if it is not already in it\n        if (!inCart($rootScope.products[index].id)) {\n           viewed.push({\"id\"  : index});\n        }\n      };\n      \n      // Get viewed count\n      this.getViewedCount = function() {\n        return viewed.length;\n      };\n      \n      \n      // Remove item from recently viewed array\n      this.removeItem = function(index) {\n        console.log(\"Removing item from recetly viewed\");\n      };\n      \n        \n      \n  \n      // Return recently viewed array\n      this.getViewed = function() {\n        return viewed;\n      };\n}]);\n"],"sourceRoot":"/source/"}